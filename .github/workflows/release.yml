name: Build and Release Tauri App

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Change directory to cutwise
        working-directory: ./cutwise
        run: pnpm install

      - name: Run build script
        working-directory: ./cutwise
        run: ./src-tauri/build.bat

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cutwise/src-tauri/resources/main.exe
          asset_name: main.exe
          asset_content_type: application/octet-stream

      - name: Upload additional assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cutwise/src-tauri/resources/settings.json
          asset_name: settings.json
          asset_content_type: application/json

      - name: Upload additional assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cutwise/src-tauri/resources/setup_db.sql
          asset_name: setup_db.sql
          asset_content_type: application/sql
